apiVersion: batch/v1
kind: Job
metadata:
  name: kubebench-manual-scan
  namespace: security
spec:
  template:
    spec:
      serviceAccountName: kubebench
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: kubebench
        image: aquasec/kube-bench:v0.8.0
        command: ["kube-bench"]
        args: 
          - --outputfile
          - /tmp/results/kubebench-results.json
          - --json
          - --benchmark
          - cis-1.23
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: results
          mountPath: /tmp/results
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
      - name: results-publisher
        image: alpine:3.19
        command: ["/bin/sh"]
        args:
          - -c
          - |
            echo "$(date): Kube-bench scan completed"
            if [ -f /tmp/results/kubebench-results.json ]; then
              echo "Results saved to /tmp/results/kubebench-results.json"
              # Results will be available in the pod logs
              cat /tmp/results/kubebench-results.json
            else
              echo "ERROR: No results file found"
              exit 1
            fi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: results
          mountPath: /tmp/results
          readOnly: true
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
      restartPolicy: Never
      volumes:
      - name: results
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
  backoffLimit: 1