strategyType: Recreate
image:
  repository: ghcr.io/blakeblackshear/frigate
  tag: 0.14.1
  pullPolicy: IfNotPresent
imagePullSecrets: []
env: {}
envFromSecrets:
  - frigate-secret
coral:
  enabled: true
  hostPath: /dev/apex_0
gpu:
  nvidia:
    enabled: false
    runtimeClassName:
extraVolumes:
  - name: coral-dev-two
    hostPath:
      path: /dev/apex_1
  - name: intel-gpu
    hostPath:
      path: /dev/dri/renderD129
extraVolumeMounts:
  - mountPath: /dev/apex_1
    name: coral-dev-two
  - mountPath: /dev/dri/renderD129
    name: intel-gpu
shmSize: 1Gi
tmpfs:
  enabled: true
  sizeLimit: 1Gi
nameOverride: ""
fullnameOverride: ""
config: |
  mqtt:
    host: {FRIGATE_MQTT_HOST}
    port: 1883
    topic_prefix: frigate
    client_id: frigate
    user: ejarrett
    password: {FRIGATE_MQTT_PASSWORD}
    stats_interval: 60
  ui:
    timezone: America/Chicago
  detectors:
    coral1:
      type: edgetpu
      device: pci:0
    coral2:
      type: edgetpu
      device: pci:1
  objects:
    track:
      - person
      - cat
      - car
      - dog
  go2rtc:
    streams:
      4kcamera:
        - rtsp://admin:{FRIGATE_CAMERA_PASSWORD}@{FRIGATE_CAMERA_4K}:554/h264Preview_01_sub
        - "ffmpeg:4kcamera#video=h264#audio=aac"
      driveway:
        - rtsp://admin:{FRIGATE_CAMERA_PASSWORD}@{FRIGATE_CAMERA_DRIVEWAY}:554/h264Preview_01_main
        - "ffmpeg:driveway#video=h264#audio=aac"
  record:
    enabled: True
    retain:
      days: 0
      mode: all
  ffmpeg:
    hwaccel_args: preset-vaapi
    output_args:
      record: preset-record-generic-audio-copy
  cameras:
    4kcamera:
      ffmpeg:
        inputs:
        - path: rtsp://127.0.0.1:8554/4kcamera
          roles:
            - detect
            - record
      detect:
        enabled: True
      snapshots:
        enabled: True
    driveway:
      ffmpeg:
        inputs:
        - path: rtsp://127.0.0.1:8554/driveway
          roles:
            - detect
            - record
      detect:
        enabled: True
      snapshots:
        enabled: True
        required_zones:
          - front_house
      zones:
        front_house:
          coordinates: 0,1920,2560,1920,2560,1302,2560,751,2505,739,2347,708,2220,622,2211,346,1697,304,1155,297,525,358
      objects:
        filters:
          person:
            min_area: 1000
            mask: 1350,500,1300,500,1300,400,1350,400
          car:
            min_area: 10000
probes:
  liveness:
    enabled: true
    initialDelaySeconds: 30
    failureThreshold: 5
    timeoutSeconds: 10
  readiness:
    enabled: true
    initialDelaySeconds: 30
    failureThreshold: 5
    timeoutSeconds: 10
  startup:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10
service:
  type: ClusterIP
  port: 5000
  annotations: {}
  labels: {}
  loadBalancerIP:
  ipFamilyPolicy: SingleStack
  ipFamilies: []
ingress:
  enabled: false
  ingressClassName: ~
  annotations: {}
  hosts:
    - host: chart.example.local
      paths:
        - path: '/'
          portName: http-auth
  tls: []
persistence:
  data:
    enabled: false
    accessMode: ReadWriteOnce
    size: 10Gi
    skipuninstall: false
  config:
    enabled: false
    accessMode: ReadWriteOnce
    size: 100Mi
    skipuninstall: false
  media:
    enabled: false
    accessMode: ReadWriteOnce
    size: 10Gi
    skipuninstall: false
resources:
  limits:
    memory: "12Gi"
    cpu: "4"
    gpu.intel.com/i915: 1
securityContext: {}
nodeSelector:
  feature.node.kubernetes.io/coral.count: "2"
tolerations: []
affinity: {}
podAnnotations: {}
